export class Command {
    static paths;
    /**
     * Just an helper to use along with the `paths` fields, to make it
     * clearer that a command is the default one.
     *
     * @example
     * class MyCommand extends Command {
     *   static paths = [Command.Default];
     * }
     */
    static Default = [];
    /**
     * Contains the usage information for the command. If undefined, the
     * command will be hidden from the general listing.
     */
    static usage;
    static Usage(usage) {
        return usage;
    }
    /**
     * Standard error handler which will simply rethrow the error. Can be used
     * to add custom logic to handle errors from the command or simply return
     * the parent class error handling.
     */
    async catch(error) {
        throw error;
    }
    /**
     * Predefined that will be set to true if `-h,--help` has been used, in
     * which case `Command#execute` won't be called.
     */
    help = false;
    /**
     * Predefined variable that will be populated with the path that got used
     * to access the command currently being executed.
     */
    path;
    /**
     * Predefined variable that will be populated with the tokens found when
     * interpreting the command line.
     */
    tokens;
    /**
     * Predefined variable that will be populated with a miniature API that can
     * be used to query the program that ran this command.
     */
    program;
}
//# sourceMappingURL=command.js.map