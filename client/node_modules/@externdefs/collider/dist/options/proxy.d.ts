import type { CommandBuilder, RunState } from '../core/index.js';
import { Option, type OptionReturn } from './base.js';
export type ProxyOptionFlags = {
    name?: string;
    required?: number;
};
export declare function Proxy(options?: ProxyOptionFlags): OptionReturn<string[]>;
export declare class ProxyOption extends Option<string[]> {
    name: string | undefined;
    required: number | undefined;
    constructor(options: ProxyOptionFlags);
    define(builder: CommandBuilder<unknown>, key: string): void;
    transform(_builder: CommandBuilder<unknown>, _key: string, state: RunState): string[];
}
